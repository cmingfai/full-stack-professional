name: CD - Deploy React Frontend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - frontend/react/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/react

    steps:
      - uses: actions/checkout@v3

      - name: Slack commit message and sha
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":":github: Created commit: https://github.com/cmingfai/full-stack-professional/commit/${{ github.sha }} - ${{ github.event.head_commit.message }}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack message - CD Workflow
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":workflow: Starting CD for React Frontend"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(TZ='Asia/Hong_Kong' date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT

      - name: Slack message - Build Number
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":tagspaces: Generated Build Number: ${{steps.build-number.outputs.BUILD_NUMBER}}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack message - Docker
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":docker: Building and pushing docker image: cmingfai/amigoscode-react:${{steps.build-number.outputs.BUILD_NUMBER}}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Build and push React Frontend Docker image
        run: |
          chmod +x ../../.ci/build-publish.sh
          USERNAME=cmingfai \
          REPO=amigoscode-react \
          TAG=${{ steps.build-number.outputs.BUILD_NUMBER }} \
          ../../.ci/build-publish.sh . \
          --build-arg api_base_url=${{secrets.EB_ENVIRONMENT_URL}}:8080

      - name: Slack message - Dockerrun.aws.json
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":update: Update Dockerrun.aws.json api image tag with new build number: ${{steps.build-number.outputs.BUILD_NUMBER}}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Update Dockerrun.aws.json api image tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat ../../Dockerrun.aws.json
          sed -i -E 's_(cmingfai/amigoscode-react:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' ../../Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat ../../Dockerrun.aws.json

      - name: Slack message - Deploy to AWS
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":aws: Deploying to AWS Beanstalk with version: ${{steps.build-number.outputs.BUILD_NUMBER}}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: Dockerrun.aws.json

      - name: Slack message - git
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":git: Committing Dockerrun.aws.json"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ../../Dockerrun.aws.json
          git commit -m "Update Dockerrun.aws.json for React frontend docker image with new version ${{ steps.build-number.outputs.BUILD_NUMBER }}"
          git push

      - name: Slack message - Finished
        if: always()
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":finish_flag: Deploy Result: ${{job.status}}, URL: ${{secrets.EB_ENVIRONMENT_URL}}"}' 
          ${{ secrets.SLACK_WEBHOOK_URL }}